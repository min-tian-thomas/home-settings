CREATE TABLE underlying (
    und_id serial PRIMARY KEY,
    und_name VARCHAR (100) NOT NULL
);

INSERT INTO underlying (und_name) VALUES 
('IF'), ('IH'), ('M'), ('Au');

 und_id | und_name 
--------+----------
      1 | IF
      2 | IH
      3 | M
      4 | Au

CREATE TABLE pricing_pofile (
    prp_id serial PRIMARY KEY,
    prp_name VARCHAR (100) NOT NULL
);

INSERT INTO pricing_pofile (prp_name) VALUES
('Default'), ('Risk');

 prp_id | prp_name 
--------+----------
      1 | Default
      2 | Risk

CREATE TABLE underlying_pricing_parameter_set (
    upp_id serial PRIMARY KEY,
    upp_und_id_ref INT NOT NULL,
	upp_prp_id_ref INT NOT NULL,
	UNIQUE(upp_und_id_ref, upp_prp_id_ref),
	CONSTRAINT FK_upp_und_ref FOREIGN KEY(upp_und_id_ref) REFERENCES underlying(und_id) ON DELETE CASCADE,
	CONSTRAINT FK_upp_prp_id_ref FOREIGN KEY(upp_prp_id_ref) REFERENCES pricing_pofile(prp_id) ON DELETE CASCADE
);

INSERT INTO underlying_pricing_parameter_set (upp_und_id_ref, upp_prp_id_ref) VALUES
(1, 1), (1, 2),
(2, 1),
(3, 1), 
(4, 1), (4, 2);

 upp_id | upp_und_id_ref | upp_prp_id_ref 
--------+----------------+----------------
      1 |              1 |              1
      2 |              1 |              2
      3 |              2 |              1
      4 |              3 |              1
      5 |              4 |              1
      6 |              4 |              2


CREATE TYPE xd_upp_types AS ENUM ('int', 'string', 'double', 'bool');

CREATE TABLE underlying_pricing_parameter_set_x_data (
    xd_upp_id serial PRIMARY KEY,
    xd_upp_name VARCHAR (100) NOT NULL,
	xd_upp_type xd_upp_types NOT NULL, 
	xd_upp_tag VARCHAR (10) NOT NULL
);

INSERT INTO underlying_pricing_parameter_set_x_data (xd_upp_name, xd_upp_type, xd_upp_tag) VALUES
('psy_manual_transfer_multipiler', 'double', 'psy'),
('psy_automatic_transfer_multipiler', 'double', 'psy'),
('psy_open_transfer_multipiler', 'double', 'psy'),
('psy_nonopen_transfer_multipiler', 'double', 'psy'),
('test_multipiler', 'double', 'test');

ALTER TABLE underlying_pricing_parameter_set_x_data
ADD xd_upp_tag VARCHAR (10) NOT NULL DEFAULT 'psy';
ALTER TABLE underlying_pricing_parameter_set_x_data xd_upp_tag DROP DEFAULT;


thomas=# select * from underlying_pricing_parameter_set_x_data;
 xd_upp_id |            xd_upp_name            | xd_upp_type | xd_upp_tag 
-----------+-----------------------------------+-------------+------------
         1 | psy_manual_transfer_multipiler    | double      | psy
         2 | psy_automatic_transfer_multipiler | double      | psy
         3 | psy_open_transfer_multipiler      | double      | psy
         4 | psy_nonopen_transfer_multipiler   | double      | psy
         5 | test_multipiler                   | double      | test



CREATE TABLE underlying_pricing_parameter_set_x_attrib (
  xa_upp_id serial PRIMARY KEY,
  xa_upp_ref INT NOT NULL,
  xa_upp_xd_ref INT NOT NULL,
  xa_upp_value TEXT NOT NULL,
  CONSTRAINT FK_xa_upp_ref FOREIGN KEY(xa_upp_ref) REFERENCES underlying_pricing_parameter_set(upp_id) ON DELETE CASCADE,
  CONSTRAINT FK_xa_upp_xd_ref FOREIGN KEY(xa_upp_xd_ref) REFERENCES underlying_pricing_parameter_set_x_data(xd_upp_id) ON DELETE CASCADE
);
INSERT INTO underlying_pricing_parameter_set_x_attrib (xa_upp_ref, xa_upp_xd_ref, xa_upp_value) VALUES
(1, 1, '1.0'),
(1, 2, '2.0'),
(1, 3, '0.5'),
(1, 4, '1.0');

INSERT INTO underlying_pricing_parameter_set_x_attrib (xa_upp_ref, xa_upp_xd_ref, xa_upp_value) VALUES
(2, 1, '1.0'),
(2, 2, '2.0'),
(2, 3, '0.5'),
(2, 4, '1.0'),
(3, 1, '1.0'),
(3, 2, '2.0'),
(3, 3, '0.5'),
(3, 4, '1.0');

INSERT INTO underlying_pricing_parameter_set_x_attrib (xa_upp_ref, xa_upp_xd_ref, xa_upp_value) VALUES
(1, 5, '5.0'),
(2, 5, '5.0'),
(3, 5, '5.0');


thomas=# select * from underlying_pricing_parameter_set_x_attrib;
 xa_upp_id | xa_upp_ref | xa_upp_xd_ref | xa_upp_value 
-----------+------------+---------------+--------------
         1 |          1 |             1 | 1.0
         2 |          1 |             2 | 2.0
         3 |          1 |             3 | 0.5
         4 |          1 |             4 | 1.0
         5 |          2 |             1 | 1.0
         6 |          2 |             2 | 2.0
         7 |          2 |             3 | 0.5
         8 |          2 |             4 | 1.0
         9 |          3 |             1 | 1.0
        10 |          3 |             2 | 2.0
        11 |          3 |             3 | 0.5
        12 |          3 |             4 | 1.0
        13 |          1 |             5 | 5.0
        14 |          2 |             5 | 5.0
        15 |          3 |             5 | 5.0




SELECT und.und_name, pp.prp_name, xd_upp_name multipiler, xa_upp_value value 
FROM underlying_pricing_parameter_set_x_attrib upp_xa
INNER JOIN underlying_pricing_parameter_set upp ON upp_xa.xa_upp_ref = upp.upp_id
INNER JOIN underlying_pricing_parameter_set_x_data upp_xd ON upp_xa.xa_upp_xd_ref = upp_xd.xd_upp_id
INNER JOIN underlying und ON und.und_id = upp.upp_und_id_ref
INNER JOIN pricing_pofile pp ON pp.prp_id = upp.upp_prp_id_ref;

 und_name | prp_name |            multipiler             | value 
----------+----------+-----------------------------------+-------
 IF       | Default  | psy_manual_transfer_multipiler    | 1.0
 IF       | Default  | psy_automatic_transfer_multipiler | 2.0
 IF       | Default  | psy_open_transfer_multipiler      | 0.5
 IF       | Default  | psy_nonopen_transfer_multipiler   | 1.0
 IF       | Risk     | psy_manual_transfer_multipiler    | 1.0
 IF       | Risk     | psy_automatic_transfer_multipiler | 2.0
 IF       | Risk     | psy_open_transfer_multipiler      | 0.5
 IF       | Risk     | psy_nonopen_transfer_multipiler   | 1.0
 IH       | Default  | psy_manual_transfer_multipiler    | 1.0
 IH       | Default  | psy_automatic_transfer_multipiler | 2.0
 IH       | Default  | psy_open_transfer_multipiler      | 0.5
 IH       | Default  | psy_nonopen_transfer_multipiler   | 1.0
 IF       | Default  | test_multipiler                   | 5.0
 IF       | Risk     | test_multipiler                   | 5.0
 IH       | Default  | test_multipiler                   | 5.0


SELECT und.und_name, pp.prp_name, xd_upp_name multipiler, xa_upp_value value 
FROM underlying_pricing_parameter_set_x_attrib upp_xa
INNER JOIN underlying_pricing_parameter_set upp ON upp_xa.xa_upp_ref = upp.upp_id
INNER JOIN underlying_pricing_parameter_set_x_data upp_xd ON upp_xa.xa_upp_xd_ref = upp_xd.xd_upp_id
INNER JOIN underlying und ON und.und_id = upp.upp_und_id_ref
INNER JOIN pricing_pofile pp ON pp.prp_id = upp.upp_prp_id_ref
WHERE upp_xd.xd_upp_tag = 'psy';
