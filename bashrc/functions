function add_tmux_window() {
  local window_name=$1
  local cwd=$2

  tmux new-window -t $session_name:$idx -n $window_name "mkdir -p $cwd; cd $cwd; bash -i"
  for ((cmd_idx=3; cmd_idx<=$#; cmd_idx++))
  do
    #pick up args by idx
    cmd=${!cmd_idx}
    tmux send-keys -t ${session_name}:${idx} "$cmd"
    tmux send-keys -t ${session_name}:${idx} ENTER
  done
  
  idx=$((idx+1))
}

function setup_workspace() {
  session_name=workspace
  idx=1
  
  # start new tmux session
  tmux new -s $session_name -d
    
  # add_tmux_window "jupyter-lab" "~/projects/workspace/polaris" "jupyter lab" 
  add_tmux_window "logs" "/tmp/logs" "ls -l"
  add_tmux_window "cores" "/tmp/cores" "ls -l"
  add_tmux_window "shms" "/dev/shm" "ls -l"
  add_tmux_window "fsf" "~/projects/workspace/fsf" "ls -l"
  add_tmux_window "polaris" "~/projects/workspace/polaris"
 

  tmux select-window -t $session_name:0
  tmux -2 attach-session -t $session_name
}

function test_much() {
   for (( idx=1; idx < 5000; idx++ ))
   do
      echo "Running [$@] for [$idx] times"
      $@
      if [[ $? != 0 ]]; then break; fi
  done
}

function set_proxy() {
	export windows_host=`cat /etc/resolv.conf|grep nameserver|awk '{print $2}'`
	#export ALL_PROXY=socks5://$windows_host:1080

	export ALL_PROXY=http://$windows_host:1080
	export HTTP_PROXY=$ALL_PROXY
	export http_proxy=$ALL_PROXY
	export HTTPS_PROXY=$ALL_PROXY
	export https_proxy=$ALL_PROXY
}

function unset_proxy() {
	unset ALL_PROXY
	unset HTTP_PROXY
	unset http_proxy
	unset HTTPS_PROXY
	unset https_proxy
}

function ntmux() {
  	read -p "Input your session name (Enter to list existing ones): " SESSION_NAME
	if [ "$SESSION_NAME" == "" ]; then
		echo "List all current sessions belongs to you on this host:"
		tmux ls
		read -p "Input your session name: " SESSION_NAME
		tmux attach -t $SESSION_NAME
		if [ $? -eq 0 ]; then
                	return
		fi
        fi
	
	tmux new -s $SESSION_NAME
}

# Useful unarchiver!
function extract () {
        if [ -f $1 ] ; then
                case $1 in
                        *.tar.bz2)        tar xjf $1               ;;
                        *.tar.gz)         tar xzf $1               ;;
                        *.bz2)            bunzip2 $1               ;;
                        *.rar)            rar x $1                 ;;
                        *.gz)             gunzip $1                ;;
                        *.tar)            tar xf $1                ;;
                        *.tbz2)           tar xjf $1               ;;
                        *.tgz)            tar xzf $1               ;;
                        *.zip)            unzip $1                 ;;
                        *.Z)              uncompress $1            ;;
                        *)                echo "'$1' cannot be extracted via extract()" ;;
                esac
        else
                echo "'$1' is not a valid file"
        fi
}

function revert(){
    git reset --hard $1
}

# Simplify apt-get search and install
function show ()
{
    apt-cache search $1
}

function giveme ()
{
    sudo apt-get install "$@"
}
